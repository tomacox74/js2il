{
  "sections": [
    {
      "section": "13",
      "title": "ECMAScript Language: Expressions",
      "url": "https://tc39.es/ecma262/#sec-ecmascript-language-expressions",
      "subsections": [
        
        {
          "subsection": "13.2",
          "title": "Declarations",
          "url": "https://tc39.es/ecma262/#sec-declarations",
          "paragraphs": [
            {
              "paragraph": "13.2.1",
              "title": "let/const",
              "url": "https://tc39.es/ecma262/#sec-let-and-const-declarations",
              "features": [
                {
                  "feature": "let/const",
                  "status": "Partially Supported",
                  "testScripts": [
                    "Js2IL.Tests/JavaScript/Variable_LetBlockScope.js",
                    "Js2IL.Tests/JavaScript/Variable_LetShadowing.js",
                    "Js2IL.Tests/JavaScript/Variable_LetNestedShadowingChain.js",
                    "Js2IL.Tests/JavaScript/Variable_LetFunctionNestedShadowing.js",
                    "Js2IL.Tests/JavaScript/Variable_ConstSimple.js"
                  ],
                  "notes": "Block scoping, shadowing chain, nested function capture, and simple const initialization implemented. Pending: const reassignment runtime error (Variable_ConstReassignmentError.js), temporal dead zone access error (Variable_TemporalDeadZoneAccess.js), and dead zone reads before initialization."
                }
              ]
            },
            {
              "paragraph": "13.2.1",
              "title": "var",
              "url": "https://tc39.es/ecma262/#sec-variable-statement",
              "features": [
                {
                  "feature": "var",
                  "status": "Supported",
                  "testScripts": [
                    "Js2IL.Tests/JavaScript/Function_GlobalFunctionChangesGlobalVariableValue.js",
                    "Js2IL.Tests/JavaScript/Function_GlobalFunctionDeclaresAndCallsNestedFunction.js",
                    "Js2IL.Tests/JavaScript/Function_GlobalFunctionLogsGlobalVariable.js"
                  ],
                  "notes": ""
                }
              ]
            },
            {
              "paragraph": "13.2.3",
              "title": "Function declarations",
              "url": "https://tc39.es/ecma262/#sec-function-definitions",
              "features": [
                {
                  "feature": "Function declarations",
                  "status": "Supported",
                  "testScripts": [
                    "Js2IL.Tests/JavaScript/Function_HelloWorld.js"
                  ],
                  "notes": ""
                },
                {
                  "feature": "Arrow functions",
                  "status": "Not Supported",
                  "testScripts": [],
                  "notes": ""
                }
              ]
            },
            {
              "paragraph": "13.2.3.1",
              "title": "Default parameters, Rest parameters",
              "url": "https://tc39.es/ecma262/#sec-function-definitions-runtime-semantics-evaluation",
              "features": [
                {
                  "feature": "Default parameters",
                  "status": "Not Supported",
                  "testScripts": [],
                  "notes": ""
                },
                {
                  "feature": "Rest parameters",
                  "status": "Not Supported",
                  "testScripts": [],
                  "notes": ""
                }
              ]
            },
            {
              "paragraph": "13.2.5",
              "title": "Spread syntax",
              "url": "https://tc39.es/ecma262/#sec-argument-lists-runtime-semantics-argumentlistevaluation",
              "features": [
                {
                  "feature": "Spread syntax",
                  "status": "Not Supported",
                  "testScripts": [],
                  "notes": ""
                }
              ]
            }
          ]
        },
        {
          "subsection": "13.2.4",
          "title": "Array Initializer (ArrayLiteral)",
          "url": "https://tc39.es/ecma262/#sec-array-initializer",
          "paragraphs": [
            {
              "paragraph": "13.2.4.1",
              "title": "ArrayLiteral",
              "url": "https://tc39.es/ecma262/#sec-array-initializer",
              "features": [
                {
                  "feature": "Array literal basic construction",
                  "status": "Supported",
                  "testScripts": [
                    "Js2IL.Tests/JavaScript/ArrayLiteral.js"
                  ],
                  "notes": "Covers creation, element access, and length property. See also verified output in Literals/GeneratorTests.ArrayLiteral.verified.txt."
                }
              ]
            }
          ]
        },
        {
          "subsection": "13.2.5",
          "title": "Object Initializer (ObjectLiteral)",
          "url": "https://tc39.es/ecma262/#sec-object-initializer",
          "paragraphs": [
            {
              "paragraph": "13.2.5.1",
              "title": "ObjectLiteral",
              "url": "https://tc39.es/ecma262/#sec-object-initializer",
              "features": [
                {
                  "feature": "Object literal basic construction",
                  "status": "Supported",
                  "testScripts": [
                    "Js2IL.Tests/JavaScript/ObjectLiteral.js"
                  ],
                  "notes": "Covers creation and property access. See also verified output in Literals/GeneratorTests.ObjectLiteral.verified.txt."
                }
              ]
            }
          ]
        },
        {
          "subsection": "13.4",
          "title": "Unary Operators",
          "url": "https://tc39.es/ecma262/#sec-ecmascript-language-expressions",
          "paragraphs": [
            {
              "paragraph": "13.4.9",
              "title": "Postfix increment operator (++)",
              "url": "https://tc39.es/ecma262/#sec-postfix-increment-operator",
              "features": [
                { "feature": "Unary ++ (Postfix increment)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/UnaryOperator_PlusPlusPostfix.js"], "notes": "" }
              ]
            },
            {
              "paragraph": "13.4.10",
              "title": "Postfix decrement operator (--)",
              "url": "https://tc39.es/ecma262/#sec-postfix-decrement-operator",
              "features": [
                { "feature": "Unary -- (Postfix decrement)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/UnaryOperator_MinusMinusPostfix.js"], "notes": "" }
              ]
            }
          ]
        },
        {
          "subsection": "13.5",
          "title": "Binary Operators",
          "url": "https://tc39.es/ecma262/#sec-ecmascript-language-expressions",
          "paragraphs": [
            {
              "paragraph": "13.5.1",
              "title": "Addition operator (+)",
              "url": "https://tc39.es/ecma262/#sec-additive-operators",
              "features": [
                { "feature": "Binary + (Addition)", "status": "Supported", "testScripts": [
                  "Js2IL.Tests/JavaScript/BinaryOperator_AddNumberNumber.js",
                  "Js2IL.Tests/JavaScript/BinaryOperator_AddStringNumber.js",
                  "Js2IL.Tests/JavaScript/BinaryOperator_AddStringString.js"
                ], "notes": "" }
              ]
            },
            {
              "paragraph": "13.5.2",
              "title": "Subtraction operator (-)",
              "url": "https://tc39.es/ecma262/#sec-subtraction-operator",
              "features": [
                { "feature": "Binary - (Subtraction)", "status": "Supported", "testScripts": [
                  "Js2IL.Tests/JavaScript/BinaryOperator_SubNumberNumber.js"
                ], "notes": "" }
              ]
            },
            {
              "paragraph": "13.5.3",
              "title": "Multiplicative operators (*, /, %)",
              "url": "https://tc39.es/ecma262/#sec-multiplicative-operators",
              "features": [
                { "feature": "Binary * (Multiplication)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/BinaryOperator_MulNumberNumber.js"], "notes": "" },
                { "feature": "Binary / (Division)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/BinaryOperator_DivNumberNumber.js"], "notes": "" },
                { "feature": "Binary % (Remainder)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/BinaryOperator_ModNumberNumber.js"], "notes": "" }
              ]
            },
            {
              "paragraph": "13.5.4",
              "title": "Exponentiation operator (**) ",
              "url": "https://tc39.es/ecma262/#sec-exp-operator",
              "features": [
                { "feature": "Binary ** (Exponentiation)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/BinaryOperator_ExpNumberNumber.js"], "notes": "" }
              ]
            },
            {
              "paragraph": "13.5.6",
              "title": "Bitwise operators (&, |, ^)",
              "url": "https://tc39.es/ecma262/#sec-binary-bitwise-operators",
              "features": [
                { "feature": "Binary & (Bitwise AND)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/BinaryOperator_BitwiseAndNumberNumber.js"], "notes": "" },
                { "feature": "Binary | (Bitwise OR)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/BinaryOperator_BitwiseOrNumberNumber.js"], "notes": "" },
                { "feature": "Binary ^ (Bitwise XOR)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/BinaryOperator_BitwiseXorNumberNumber.js"], "notes": "" }
              ]
            },
            {
              "paragraph": "13.5.7",
              "title": "Shift operators (<<, >>, >>>)",
              "url": "https://tc39.es/ecma262/#sec-left-shift-operator",
              "features": [
                { "feature": "Binary << (Left shift)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/BinaryOperator_LeftShiftNumberNumber.js"], "notes": "" },
                { "feature": "Binary >> (Signed right shift)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/BinaryOperator_RightShiftNumberNumber.js"], "notes": "" },
                { "feature": "Binary >>> (Unsigned right shift)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/BinaryOperator_UnsignedRightShiftNumberNumber.js"], "notes": "" }
              ]
            },
            {
              "paragraph": "13.5.8",
              "title": "Relational operators (<, <=, >, >=)",
              "url": "https://tc39.es/ecma262/#sec-relational-operators",
              "features": [
                { "feature": "Binary < (Less than)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/BinaryOperator_LessThan.js"], "notes": "" },
                { "feature": "Binary <= (Less than or equal)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/BinaryOperator_LessThanOrEqual.js"], "notes": "" },
                { "feature": "Binary > (Greater than)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/BinaryOperator_GreaterThan.js"], "notes": "" },
                { "feature": "Binary >= (Greater than or equal)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/BinaryOperator_GreaterThanOrEqual.js"], "notes": "" }
              ]
            },
            {
              "paragraph": "13.5.9",
              "title": "Equality operators (==)",
              "url": "https://tc39.es/ecma262/#sec-equality-operators",
              "features": [
                { "feature": "Binary == (Equality)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/BinaryOperator_Equal.js"], "notes": "" }
              ]
            }
          ]
  }
      ]
    },
    {
      "section": "14",
      "title": "ECMAScript Language: Statements and Declarations",
      "url": "https://tc39.es/ecma262/#sec-ecmascript-language-statements-and-declarations",
      "subsections": [
        {
          "subsection": "14.6",
          "title": "The if Statement",
          "url": "https://tc39.es/ecma262/#sec-if-statement",
          "paragraphs": [
            {
              "paragraph": "14.6.2",
              "title": "Runtime Semantics: Evaluation",
              "url": "https://tc39.es/ecma262/#sec-if-statement",
              "features": [
                { "feature": "if statement (LessThan)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/ControlFlow_If_LessThan.js"], "notes": "" }
              ]
            }
          ]
        },
        {
          "subsection": "14.7.4",
          "title": "The for Statement",
          "url": "https://tc39.es/ecma262/#sec-for-statement",
          "paragraphs": [
            {
              "paragraph": "14.7.4.2",
              "title": "Runtime Semantics: ForLoopEvaluation",
              "url": "https://tc39.es/ecma262/#sec-runtime-semantics-forloopevaluation",
              "features": [
                { "feature": "for loop (CountToFive)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/ControlFlow_ForLoop_CountToFive.js"], "notes": "" },
                { "feature": "for loop (CountDownFromFive)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/ControlFlow_ForLoop_CountDownFromFive.js"], "notes": "" },
                { "feature": "for loop (LessThanOrEqual)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/ControlFlow_ForLoop_LessThanOrEqual.js"], "notes": "" },
                { "feature": "for loop (GreaterThanOrEqual)", "status": "Supported", "testScripts": ["Js2IL.Tests/JavaScript/ControlFlow_ForLoop_GreaterThanOrEqual.js"], "notes": "" }
              ]
            }
          ]
        }
      ]
    }
  ]
}
